/**
 * Recursively split a string in the largest chunks
 * possible from the highest position of a delimiter all the way
 * to a maximum size
 *
 * Every chunk size will be at minimum `text[0:idx]` where `idx`
 * is the highest index of `delim` found in `text`; and at maximum
 * `text[0:max_size]` if no `delim` was found in `text`.
 * In the latter case, the split will occur at `text[max_size]`
 * which can be any character. The function runs itself again on the rest of
 * `text` (`text[idx:]`) until no chunk is larger than `max_size`.
 *
 * @export
 * @param {string} text The string to split.
 * @param {string} delim The delimiter to split on.
 * @param {number} maxSize The maximum size of a chunk.
 * @returns {string[]} the minimized string in tokens
 */
export declare function minimize(text: string, delim: string, maxSize: number): string[];
/**
 * Clean a list of strings
 *
 * @export
 * @param {string[]} tokens a list of strings (tokens) to clean.
 * @returns {string[]}
 *     stripped strings `tokens` without the original elements
 *     that only consisted of whitespace and/or punctuation characters.
 */
export declare function cleanTokens(tokens: string[]): string[];
